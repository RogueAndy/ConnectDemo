<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rogue.dao.JobMapper" >
  <resultMap id="BaseResultMap" type="com.rogue.entity.Job" >
    <id column="jobid" property="jobid" jdbcType="VARCHAR" />
    <result column="jobtitle" property="jobtitle" jdbcType="VARCHAR" />
    <result column="jobcontent" property="jobcontent" jdbcType="VARCHAR" />
    <result column="jobsignhuman" property="jobsignhuman" jdbcType="VARCHAR" />
    <result column="jobworkhuman" property="jobworkhuman" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    jobid, jobtitle, jobcontent, jobsignhuman, jobworkhuman
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.rogue.entity.JobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from job
    where jobid = #{jobid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from job
    where jobid = #{jobid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.rogue.entity.JobExample" >
    delete from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rogue.entity.Job" >
    insert into job (jobid, jobtitle, jobcontent, 
      jobsignhuman, jobworkhuman)
    values (#{jobid,jdbcType=VARCHAR}, #{jobtitle,jdbcType=VARCHAR}, #{jobcontent,jdbcType=VARCHAR}, 
      #{jobsignhuman,jdbcType=VARCHAR}, #{jobworkhuman,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.rogue.entity.Job" >
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobid != null" >
        jobid,
      </if>
      <if test="jobtitle != null" >
        jobtitle,
      </if>
      <if test="jobcontent != null" >
        jobcontent,
      </if>
      <if test="jobsignhuman != null" >
        jobsignhuman,
      </if>
      <if test="jobworkhuman != null" >
        jobworkhuman,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobid != null" >
        #{jobid,jdbcType=VARCHAR},
      </if>
      <if test="jobtitle != null" >
        #{jobtitle,jdbcType=VARCHAR},
      </if>
      <if test="jobcontent != null" >
        #{jobcontent,jdbcType=VARCHAR},
      </if>
      <if test="jobsignhuman != null" >
        #{jobsignhuman,jdbcType=VARCHAR},
      </if>
      <if test="jobworkhuman != null" >
        #{jobworkhuman,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rogue.entity.JobExample" resultType="java.lang.Integer" >
    select count(*) from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update job
    <set >
      <if test="record.jobid != null" >
        jobid = #{record.jobid,jdbcType=VARCHAR},
      </if>
      <if test="record.jobtitle != null" >
        jobtitle = #{record.jobtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.jobcontent != null" >
        jobcontent = #{record.jobcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.jobsignhuman != null" >
        jobsignhuman = #{record.jobsignhuman,jdbcType=VARCHAR},
      </if>
      <if test="record.jobworkhuman != null" >
        jobworkhuman = #{record.jobworkhuman,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update job
    set jobid = #{record.jobid,jdbcType=VARCHAR},
      jobtitle = #{record.jobtitle,jdbcType=VARCHAR},
      jobcontent = #{record.jobcontent,jdbcType=VARCHAR},
      jobsignhuman = #{record.jobsignhuman,jdbcType=VARCHAR},
      jobworkhuman = #{record.jobworkhuman,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rogue.entity.Job" >
    update job
    <set >
      <if test="jobtitle != null" >
        jobtitle = #{jobtitle,jdbcType=VARCHAR},
      </if>
      <if test="jobcontent != null" >
        jobcontent = #{jobcontent,jdbcType=VARCHAR},
      </if>
      <if test="jobsignhuman != null" >
        jobsignhuman = #{jobsignhuman,jdbcType=VARCHAR},
      </if>
      <if test="jobworkhuman != null" >
        jobworkhuman = #{jobworkhuman,jdbcType=VARCHAR},
      </if>
    </set>
    where jobid = #{jobid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rogue.entity.Job" >
    update job
    set jobtitle = #{jobtitle,jdbcType=VARCHAR},
      jobcontent = #{jobcontent,jdbcType=VARCHAR},
      jobsignhuman = #{jobsignhuman,jdbcType=VARCHAR},
      jobworkhuman = #{jobworkhuman,jdbcType=VARCHAR}
    where jobid = #{jobid,jdbcType=VARCHAR}
  </update>
</mapper>